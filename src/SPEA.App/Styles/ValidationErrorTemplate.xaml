<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ctrl="clr-namespace:SPEA.App.Controls"
    xmlns:exten="clr-namespace:SPEA.App.Extensions.AttachedProperties"
    xmlns:assist="clr-namespace:SPEA.App.Extensions.Assist"
    xmlns:converters="clr-namespace:SPEA.App.Utils.Converters">

    <ControlTemplate x:Key="TextBoxValidationErrorTemplate">
        <StackPanel Orientation="Vertical">
            <Border>
                <AdornedElementPlaceholder x:Name="Placeholder">
                    <Border
                        Margin="0,2,0,3"
                        BorderBrush="{DynamicResource SolidColorBrush.PrimaryPalette.Accent.Tomato}"
                        BorderThickness="1"
                        CornerRadius="{Binding ElementName=Placeholder, Path=AdornedElement.(exten:CornerRadiusExtension.CornerRadius)}"/>
                </AdornedElementPlaceholder>
            </Border>
            <Border
                x:Name="ValidationBorder"
                Margin="4,-2,4,0"
                Visibility="Visible">
                <TextBlock
                    x:Name="BorderText"
                    FontSize="10"
                    RenderOptions.ClearTypeHint="Enabled"
                    Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Accent.Tomato}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Text="{Binding ElementName=Placeholder, Path=AdornedElement.(Validation.Errors)/ErrorContent}">
                    <TextBlock.Effect>
                        <DropShadowEffect
                            Color="{DynamicResource Color.PrimaryPalette.Level0a}"
                            BlurRadius="0"
                            ShadowDepth="0.5"
                            Opacity="1.0"
                            Direction="-90"/>
                    </TextBlock.Effect>
                </TextBlock>
            </Border>
            <!--<Popup
                x:Name="ValidationPopup"
                IsOpen="False"
                Placement="{Binding ElementName=Placeholder, Path=AdornedElement.(assist:ValidationAssist.PopupPlacement)}"
                PlacementTarget="{Binding ElementName=Placeholder, Mode=OneWay}"
                AllowsTransparency="True">
                <Border
                    x:Name="PopupBorder"
                    Background="{DynamicResource SolidColorBrush.PrimaryPalette.Level0a}">
                    <TextBlock
                        x:Name="PopupText"
                        FontSize="10"
                        RenderOptions.ClearTypeHint="Enabled"
                        Foreground="{DynamicResource SolidColorBrush.PrimaryPalette.Accent.Tomato}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="{Binding ElementName=Placeholder, Path=AdornedElement.(Validation.Errors)/ErrorContent}">
                        <TextBlock.Effect>
                            <DropShadowEffect
                                Color="{DynamicResource Color.PrimaryPalette.Level0a}"
                                BlurRadius="0"
                                ShadowDepth="0.5"
                                Opacity="1.0"
                                Direction="-90"/>
                        </TextBlock.Effect>
                    </TextBlock>
                </Border>
            </Popup>-->
        </StackPanel>
        <!--<ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=Placeholder, Path=AdornedElement.(assist:ValidationAssist.UsePopup)}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="ValidationPopup" Property="IsOpen" Value="True"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>

</ResourceDictionary>