<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:SPEA.App.Utils.Converters">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>

    <Style x:Key="DataGridTopLeftCornerButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level1a}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"/>
        <Setter Property="BorderThickness" Value="0,0,0.5,0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        </Border>
                        <Polygon
                            x:Name="Arrow"
                            Margin="{TemplateBinding BorderThickness}"
                            HorizontalAlignment="Right"
                            Fill="{DynamicResource SolidColorBrush.PrimaryPalette.Level3}"
                            Opacity="0.25"
                            Points="0,10 10,10 10,0"
                            Stretch="Uniform"
                            VerticalAlignment="Bottom">
                        </Polygon>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Foreground" Value="{DynamicResource Element.Foreground.Base}"/>
        <Setter Property="Background" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level2}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"/>
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level1a}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level1a}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Grid>
                        <Border
                            Name="MainBorder"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            SnapsToDevicePixels="False"
                            UseLayoutRounding="True">
                            <ScrollViewer
                                x:Name="DG_ScrollViewer"
                                Focusable="False"
                                Background="Transparent">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <Button
                                                x:Name="TopLeftCornerButton"
                                                Grid.Row="0" Grid.Column="0"
                                                Focusable="False"
                                                Command="{x:Static DataGrid.SelectAllCommand}"
                                                Style="{StaticResource DataGridTopLeftCornerButtonStyle}"
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All},
                                                                                        Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>

                                            <DataGridColumnHeadersPresenter
                                                x:Name="PART_ColumnHeadersPresenter"
                                                Grid.Row="0" Grid.Column="1"
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                                                                        Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>

                                            <Border
                                                x:Name="TopRightCornerFiller"
                                                Grid.Row="0" Grid.Column="2"
                                                Background="{Binding Path=Background, ElementName=TopLeftCornerButton}"
                                                BorderBrush="{Binding Path=BorderBrush, ElementName=TopLeftCornerButton}"
                                                BorderThickness="0,0,0,0.5"
                                                Visibility="{Binding Path=Visibility, ElementName=PART_VerticalScrollBar}">
                                            </Border>

                                            <ScrollContentPresenter
                                                x:Name="PART_ScrollContentPresenter"
                                                Grid.Row="1"
                                                Grid.ColumnSpan="2"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"/>

                                            <ScrollBar
                                                x:Name="PART_VerticalScrollBar"
                                                Grid.Row="1" Grid.Column="2"
                                                Orientation="Vertical"
                                                ViewportSize="{TemplateBinding ViewportHeight}"
                                                Maximum="{TemplateBinding ScrollableHeight}"
                                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                Style="{DynamicResource ScrollBarStyle}"/>

                                            <Border
                                                x:Name="BottomLeftCornerFiller"
                                                Grid.Row="2" Grid.Column="0"
                                                Background="{Binding Path=Background, ElementName=TopLeftCornerButton}"
                                                BorderBrush="{Binding Path=BorderBrush, ElementName=TopLeftCornerButton}"
                                                BorderThickness="0,0.5,0,0"
                                                Visibility="{Binding Path=Visibility, ElementName=PART_HorizontalScrollBar}">
                                            </Border>

                                            <Grid
                                               Grid.Row="2" Grid.Column="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <ScrollBar
                                                    x:Name="PART_HorizontalScrollBar"
                                                    Grid.Row="0" Grid.Column="1"
                                                    Orientation="Horizontal"
                                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                                    Maximum="{TemplateBinding ScrollableWidth}"
                                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Style="{DynamicResource ScrollBarStyle}"/>

                                            </Grid>

                                            <Border
                                                x:Name="BottomRightCornerFiller"
                                                Grid.Row="2" Grid.Column="3"
                                                Background="{Binding Path=Background, ElementName=TopLeftCornerButton}"
                                                BorderBrush="{Binding Path=BorderBrush, ElementName=TopLeftCornerButton}"
                                                BorderThickness="0.5,0.5,0,0"
                                                Visibility="{Binding Path=Visibility, ElementName=PART_HorizontalScrollBar}">
                                            </Border>

                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level0a}"/>
        <Setter Property="BorderThickness" Value="0.5,0,0,0.5"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid>
                        <Border
                            x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level4}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Element.Foreground.Accent}"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Element.Foreground.Shadowed}"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Focusable" Value="False"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Element.Foreground.Shadowed}"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ReadOnlyDataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level0a}"/>
        <Setter Property="BorderThickness" Value="0.5,0,0,0.5"/>
        <Setter Property="Padding" Value="2,0,2,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid>
                        <Border
                            x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level4}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Element.Foreground.Accent}"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Element.Foreground.Shadowed}"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Focusable" Value="False"/>
                        </Trigger>
                        <!--
                        TODO: Row header border thickness when headers are no visible (orphaned cell and binding error problem).
                              https://social.technet.microsoft.com/wiki/contents/articles/12355.wpfhowto-avoid-binding-error-when-removing-a-datagrid-row-with-relativesource-static-bridgerelay.aspx
                        -->
                        <!--
                        TODO: Rework to achieve this behavior in a more elegant way.
                              Currrently it requires data context (collection item) to expose
                              "IsReadOnly" property we can bound trigger to.
                        -->
                        <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Element.Foreground.Shadowed}"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <!--<Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock
                        Foreground="Red"
                        Margin="2,0,0,0"
                        Text="!"
                        VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Grid>
                        <Border
                            x:Name="DGR_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter
                                    x:Name="Test"
                                    Grid.Row="0" Grid.Column="1"
                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <DataGridDetailsPresenter
                                    Grid.Row="1" Grid.Column="1"
                                    Visibility="{TemplateBinding DetailsVisibility}"
                                    SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                                                                                                                        Converter={x:Static DataGrid.RowDetailsScrollingConverter}, 
                                                                                                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                <DataGridRowHeader
                                    x:Name="DataGridRowHeaderElement"
                                    Grid.RowSpan="2"
                                    Background="{DynamicResource SolidColorBrush.PrimaryPalette.Level1a}"
                                    BorderBrush="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"
                                    BorderThickness="0,0,0.5,0.5"
                                    SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, 
                                                                            Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                                    <ContentPresenter
                                        x:Name="SelectedRowGlyph"
                                        Margin="0"
                                        Visibility="Collapsed"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        RenderTransformOrigin="0.5,0.5"
                                        Opacity="0.5"
                                        Width="{StaticResource Element.Tiny.Height}"
                                        Height="{StaticResource Element.Tiny.Height}"
                                        Content="{DynamicResource Path.Icon.ArrowDownTriangle}">
                                        <ContentPresenter.RenderTransform>
                                            <TransformGroup>
                                                <TranslateTransform Y="1"/>
                                                <RotateTransform Angle="-90"/>
                                            </TransformGroup>
                                        </ContentPresenter.RenderTransform>
                                    </ContentPresenter>
                                </DataGridRowHeader>
                            </SelectiveScrollingGrid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="SelectedRowGlyph" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="Cursor" Value="SizeNS"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level1a}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"/>
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <Border
                            x:Name="RowHeaderBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            Width="10">
                            <StackPanel
                                Orientation="Horizontal">
                                <ContentPresenter
                                    VerticalAlignment="Center"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Control
                                    SnapsToDevicePixels="False"
                                    Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                    Visibility="{Binding (Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
                            </StackPanel>
                        </Border>
                        <Thumb
                            x:Name="PART_TopHeaderGripper"
                            Style="{StaticResource RowHeaderGripperStyle}"
                            VerticalAlignment="Top"/>
                        <Thumb
                            x:Name="PART_BottomHeaderGripper"
                            Style="{StaticResource RowHeaderGripperStyle}"
                            VerticalAlignment="Bottom"/>  
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="8"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level1a}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"/>
        <Setter Property="BorderThickness" Value="0.5,0,0,0.5"/>
        <Setter Property="Padding" Value="4,2,2,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border
                            x:Name="ColumnHeaderBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="False">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <Thumb
                            x:Name="PART_LeftHeaderGripper"
                            HorizontalAlignment="Left"
                            Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb
                            x:Name="PART_RightHeaderGripper"
                            HorizontalAlignment="Right"
                            Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=HeadersVisibility, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Value="Column">
                            <Setter Property="BorderThickness" Value="0,0,0,0.5"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=HeadersVisibility, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Value="None">
                            <Setter Property="BorderThickness" Value="0,0,0,0.5"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                    <Grid>
                        <DataGridColumnHeader
                            x:Name="PART_FillerColumnHeader"
                            IsHitTestVisible="False"/>
                        <ItemsPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>