<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ctrl="clr-namespace:SPEA.App.Controls"
    xmlns:exten="clr-namespace:SPEA.App.Extensions.AttachedProperties"
    xmlns:assist="clr-namespace:SPEA.App.Extensions.Assist">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Styles/ValidationErrorTemplate.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level1}"/>
        <Setter Property="Foreground" Value="{DynamicResource Element.Foreground.Base}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level0a}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="exten:CornerRadiusExtension.CornerRadius" Value="{StaticResource Element.Tiny.CornerRadius}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Margin="0,2,0,2">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border
                                x:Name="OuterBorder"
                                Grid.Row="0"
                                Margin="0,0,0,0"
                                Height="{StaticResource Element.Increased.Height}"
                                BorderBrush="{DynamicResource SolidColorBrush.PrimaryPalette.Level2a}"
                                BorderThickness="0,0,0,1"
                                CornerRadius="{TemplateBinding exten:CornerRadiusExtension.CornerRadius}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border
                                        x:Name="ContentBorder"
                                        Grid.Column="1"
                                        Width="{TemplateBinding Width}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding exten:CornerRadiusExtension.CornerRadius}"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Center">
                                        <Grid Margin="2">
                                            <ScrollViewer
                                                x:Name="PART_ContentHost"
                                                HorizontalScrollBarVisibility="Hidden"
                                                VerticalScrollBarVisibility="Hidden"/>
                                        </Grid>
                                    </Border>
                                    <Border
                                        x:Name="HintBorder"
                                        Grid.Column="1"
                                        Margin="4,0,2,0"
                                        Background="Transparent"
                                        Visibility="Collapsed"
                                        IsHitTestVisible="False">
                                        <TextBlock
                                            x:Name="Hint"
                                            Opacity="0.2"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Text="{TemplateBinding assist:HintAssist.Hint}">
                                        </TextBlock>
                                    </Border>
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level3}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="Text" Value="{x:Static sys:String.Empty}"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HintBorder" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <!--<Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="HelpTextBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="HelpText" Property="Text" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}"/>
                        </Trigger>-->
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding (exten:AccentColorExtension.AccentColor), RelativeSource={RelativeSource Self}}"/>
                            <Setter TargetName="TextArea" Property="TextElement.Foreground" Value="{DynamicResource Element.Foreground.Accent}"/>
                            <Setter TargetName="BackgroundHighlightOverlay" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level1}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="IconArea" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="TextArea" Property="Margin" Value="0"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="TextArea" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="TextArea" Property="Margin" Value="0"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level0b}"/>
        <Setter Property="Foreground" Value="{DynamicResource Element.Foreground.Base}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level0a}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Margin="0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border
                                x:Name="OuterBorder"
                                Grid.Row="0"
                                Margin="0,0,0,0"
                                BorderBrush="{DynamicResource SolidColorBrush.PrimaryPalette.Level2a}"
                                BorderThickness="0,0,0,0"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border
                                        x:Name="ContentBorder"
                                        Grid.Column="1"
                                        Width="{TemplateBinding Width}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Center">
                                        <Grid Margin="0">
                                            <ScrollViewer
                                                x:Name="PART_ContentHost"
                                                HorizontalScrollBarVisibility="Auto"
                                                VerticalScrollBarVisibility="Auto"/>
                                        </Grid>
                                    </Border>
                                    <Border
                                        x:Name="HintBorder"
                                        Grid.Column="1"
                                        Margin="4,0,2,0"
                                        Background="Transparent"
                                        Visibility="Collapsed"
                                        IsHitTestVisible="False">
                                        <TextBlock
                                            x:Name="Hint"
                                            Opacity="0.2"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Text="{TemplateBinding assist:HintAssist.Hint}">
                                        </TextBlock>
                                    </Border>
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level1}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="Text" Value="{x:Static sys:String.Empty}"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HintBorder" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>