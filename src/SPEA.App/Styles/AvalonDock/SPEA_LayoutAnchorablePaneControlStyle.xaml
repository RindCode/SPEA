<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:assist="clr-namespace:SPEA.App.Extensions.Assist"
    xmlns:exten="clr-namespace:SPEA.App.Extensions.AttachedProperties"
    xmlns:avalonDock="clr-namespace:AvalonDock;assembly=AvalonDock"
	xmlns:avalonDockControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
	xmlns:avalonDockConverters="clr-namespace:AvalonDock.Converters;assembly=AvalonDock"
	xmlns:avalonDockLayout="clr-namespace:AvalonDock.Layout;assembly=AvalonDock"
	xmlns:avalonDockProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock">

    <!-- See https://github.com/Dirkster99/AvalonDock/blob/master/source/Components/AvalonDock/Themes/generic.xaml for the original styling source -->
    <!-- SPEA_ prefix designates that the style was redesigned for this application -->

    <Style x:Key="SPEA_LayoutAnchorablePaneControlStyle" TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
        <Setter Property="Foreground" Value="{Binding Model.Root.Manager.Foreground, RelativeSource={RelativeSource Self}}"/>
        <!--<Setter Property="Background" Value="{Binding Model.Root.Manager.Background, RelativeSource={RelativeSource Self}}"/>-->
        <Setter Property="Background" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level2}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level0a}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="TabStripPlacement" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
                    <Grid
						ClipToBounds="True"
						KeyboardNavigation.TabNavigation="Local"
						SnapsToDevicePixels="False">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!--  Following border is required to catch mouse events  -->
                        <Border
                            Grid.RowSpan="2"
                            Background="Transparent"/>
                        <Border
							x:Name="ContentPanel"
							Grid.Row="0" Grid.Column="0"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							KeyboardNavigation.DirectionalNavigation="Contained"
							KeyboardNavigation.TabIndex="2"
							KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter
								x:Name="PART_SelectedContentHost"
								Margin="{TemplateBinding Padding}"
								ContentSource="SelectedContent"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <Border
                            x:Name="HeaderPanelBorder"
                            Grid.Row="1" Grid.Column="0"
                            Margin="0,0,0,0"
                            Background="{DynamicResource LinearGradient.PrimaryPalette.Levels1to1a}"
                            BorderBrush="{DynamicResource SolidColorBrush.PrimaryPalette.Level0}"
                            BorderThickness="1,0,1,1">
                            <Border
                                x:Name="HeaderPanelBorder2"
                                Background="{DynamicResource LinearGradient.PrimaryPalette.Levels1to1a}"
                                BorderBrush="{DynamicResource SolidColorBrush.PrimaryPalette.Level2}"
                                BorderThickness="0,1,0,0">
                                <avalonDockControls:AnchorablePaneTabPanel
							        x:Name="HeaderPanel"
							        Grid.Row="0"
							        Margin="0,-1,0,0"
							        Panel.ZIndex="1"
							        IsItemsHost="True"
							        KeyboardNavigation.TabIndex="1"/>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource Element.Foreground.Inactive}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Items.Count, FallbackValue=1}" Value="1">
                            <Setter TargetName="HeaderPanelBorder" Property="Background" Value="Transparent"/>
                            <Setter TargetName="HeaderPanelBorder" Property="BorderThickness" Value="0"/>
                            <Setter TargetName="HeaderPanelBorder2" Property="Background" Value="Transparent"/>
                            <Setter TargetName="HeaderPanelBorder2" Property="BorderThickness" Value="0"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Foreground" Value="{DynamicResource Element.Foreground.Base}"/>
                    <Setter Property="Visibility" Value="{Binding IsVisible, Converter={avalonDockConverters:BoolToVisibilityConverter}}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                    <Setter Property="IsEnabled" Value="{Binding IsEnabled}"/>
                    <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
                    <Setter Property="Padding" Value="2,0,2,0"/>
                    <Setter Property="Margin" Value="0,0,0,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid>
                                    <Border
                                        x:Name="ContentBorder"
                                        Background="{DynamicResource LinearGradient.PrimaryPalette.Levels1to1a}"
                                        BorderBrush="{DynamicResource SolidColorBrush.PrimaryPalette.Level0a}"
                                        BorderThickness="0,0,1,0"
                                        Height="20">
                                        <Border
                                            x:Name="InnerBorder"
                                            BorderBrush="{DynamicResource SolidColorBrush.PrimaryPalette.Level2}"
                                            BorderThickness="0,1,0,0">
                                            <ContentPresenter
                                                Margin="10,-2,10,0"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                ContentSource="Header"/>
                                        </Border>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level1a}"/>
                                        <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level2a}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource Element.Foreground.Accent}"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level2}"/>
                                        <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level2a}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource Element.Foreground.Accent}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count, FallbackValue=1}" Value="1">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableTabItem Model="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableControl Model="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SPEA_AnchorablePaneTitleStyle" TargetType="{x:Type avalonDockControls:AnchorablePaneTitle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <avalonDockControls:DropDownControlArea
                                DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                <ContentPresenter
                                    Margin="10,0,10,0"
									Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
									ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
									ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </avalonDockControls:DropDownControlArea>
                            <avalonDockControls:DropDownButton
                                x:Name="PaneTitleDropDownButton"
								Grid.Column="1"
                                Padding="2"
								DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
								DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
								Focusable="False"
                                Background="{DynamicResource LinearGradient.PrimaryPalette.Levels1to1a}"
                                Width="{Binding ElementName=PaneTitleDropDownButton, Path=ActualHeight}"
								ToolTip="{StaticResource S.AvalonDock.Button.ToolTip.WindowPosition}"
                                assist:IconAssist.Icon="{DynamicResource Path.Icon.ArrowDownTriangle.WithDropShadow}"
                                exten:CornerRadiusExtension.CornerRadius="0"
                                Style="{StaticResource ToggleButtonStyle}">
                            </avalonDockControls:DropDownButton>
                            <Button
								x:Name="PART_AutoHidePin"
								Grid.Column="2"
                                Padding="1"
								Focusable="False"
								Style="{StaticResource RaisedOnMouseOverButtonStyle_2}"
                                Command="{Binding Path=LayoutItem.AutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Content="{StaticResource Path.Icon.Pin.WithDropShadow}"
								ToolTip="{StaticResource S.AvalonDock.Button.ToolTip.AutoHide}"
								Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                            </Button>
                            <Button
								x:Name="PART_HidePin"
								Grid.Column="3"
                                Padding="1"
                                Margin="0,0,3,0"
								Focusable="False"
								Style="{StaticResource RaisedOnMouseOverButtonStyle_2}"
                                Command="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}"
								ToolTip="{StaticResource S.Window.Button.ToolTip.Close}"
								Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}"
                                Content="{StaticResource Path.Icon.Close.WithDropShadow}">
                            </Button>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_AutoHidePin" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.CanClose, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_HidePin" Property="Command" Value="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_HidePin" Property="ToolTip" Value="{x:Static avalonDockProperties:Resources.Document_Close}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>