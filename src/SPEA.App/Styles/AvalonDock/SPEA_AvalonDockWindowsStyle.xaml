<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonDock="clr-namespace:AvalonDock;assembly=AvalonDock"
	xmlns:avalonDockControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
	xmlns:avalonDockConverters="clr-namespace:AvalonDock.Converters;assembly=AvalonDock"
	xmlns:avalonDockLayout="clr-namespace:AvalonDock.Layout;assembly=AvalonDock"
	xmlns:avalonDockProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock"
    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=AvalonDock">

    <!-- See https://github.com/Dirkster99/AvalonDock/blob/master/source/Components/AvalonDock/Themes/generic.xaml for the original styling source -->
    <!-- SPEA_ prefix designates that the style was redesigned for this application -->

    <Style x:Key="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
        <Setter Property="Background" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level0a}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level1}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome
					CaptionHeight="16"
					CornerRadius="0"
					GlassFrameThickness="0"
					ResizeBorderThickness="10"
					ShowSystemMenu="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
                    <Grid>
                        <Border
							x:Name="WindowBorder"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0">
                            <Grid Margin="3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" MinHeight="16"/>
                                    <!--  https://github.com/xceedsoftware/wpftoolkit/issues/1203  -->
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid UseLayoutRounding="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                        <avalonDockControls:DropDownControlArea
                                            Foreground="{DynamicResource Element.Foreground.Base}"
                                            DropDownContextMenu="{Binding Model.Root.Manager.DocumentContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                            DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ContentPresenter
												Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
												ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
												ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </avalonDockControls:DropDownControlArea>
                                    </Border>
                                    <Button
										Grid.Column="1"
										shell:WindowChrome.IsHitTestVisibleInChrome="True"
										Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
										CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
										Focusable="False"
										Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
										ToolTip="{StaticResource S.Window.Button.ToolTip.Maximize}"
										Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:InverseBoolToVisibilityConverter}}"
                                        Content="{DynamicResource Path.Icon.Maximize.WithDropShadow}">
                                    </Button>
                                    <Button
										Grid.Column="1"
										shell:WindowChrome.IsHitTestVisibleInChrome="True"
										Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
										CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
										Focusable="False"
										Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
										ToolTip="{StaticResource S.Window.Button.ToolTip.RestoreDown}"
										Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:BoolToVisibilityConverter}}"
                                        Content="{DynamicResource Path.Icon.RestoreDown.WithDropShadow}">
                                    </Button>
                                    <Button
										Grid.Column="2"
										shell:WindowChrome.IsHitTestVisibleInChrome="True"
										Command="{Binding Path=CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
										Focusable="False"
										Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
										ToolTip="{StaticResource S.Window.Button.ToolTip.Close}"
										Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}"
                                        Content="{DynamicResource Path.Icon.Close.WithDropShadow}">
                                    </Button>
                                </Grid>
                                <ContentPresenter
                                    Grid.Row="1"
                                    Content="{TemplateBinding Content}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Padding" Value="3"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="WindowBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
        <Setter Property="Background" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level0a}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level1}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome
					CaptionHeight="16"
					CornerRadius="0"
					GlassFrameThickness="0"
					ResizeBorderThickness="10"
					ShowSystemMenu="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
                    <Grid>
                        <Border
							x:Name="WindowBorder"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0">
                            <Grid Margin="3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" MinHeight="16"/>
                                    <!--  https://github.com/xceedsoftware/wpftoolkit/issues/1203  -->
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid UseLayoutRounding="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:BoolToVisibilityConverter}}">
                                        <avalonDockControls:DropDownControlArea
                                            Foreground="{DynamicResource Element.Foreground.Base}"
                                            DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                            DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ContentPresenter
												Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
												ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
												ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </avalonDockControls:DropDownControlArea>
                                    </Border>
                                    <avalonDockControls:DropDownButton
										x:Name="SinglePaneContextMenu"
										Grid.Column="1"
										shell:WindowChrome.IsHitTestVisibleInChrome="True"
										DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
										DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
										Focusable="False"
										Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
										ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}"
										Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:BoolToVisibilityConverter}}"
                                        Content="{DynamicResource Path.Icon.ArrowDownTriangle.WithDropShadow}">
                                    </avalonDockControls:DropDownButton>
                                    <Button
										Grid.Column="2"
										shell:WindowChrome.IsHitTestVisibleInChrome="True"
										Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
										CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
										Focusable="False"
										Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
										ToolTip="{StaticResource S.Window.Button.ToolTip.Maximize}"
										Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:InverseBoolToVisibilityConverter}}"
                                        Content="{DynamicResource Path.Icon.Maximize.WithDropShadow}">
                                    </Button>
                                    <Button
										Grid.Column="2"
										shell:WindowChrome.IsHitTestVisibleInChrome="True"
										Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
										CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
										Focusable="False"
										Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
										ToolTip="{StaticResource S.Window.Button.ToolTip.RestoreDown}"
										Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={avalonDockConverters:BoolToVisibilityConverter}}"
                                        Content="{DynamicResource Path.Icon.RestoreDown.WithDropShadow}">
                                    </Button>
                                    <Button
										x:Name="CloseButton"
										Grid.Column="3"
										shell:WindowChrome.IsHitTestVisibleInChrome="True"
										Command="{Binding HideWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
										Focusable="False"
										Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
										ToolTip="{StaticResource S.Window.Button.ToolTip.Close}"
										Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={avalonDockConverters:BoolToVisibilityConverter}}"
                                        Content="{DynamicResource Path.Icon.Close.WithDropShadow}">
                                    </Button>
                                </Grid>
                                <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Padding" Value="3" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Model.SinglePane.SelectedContent.IsActive, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="WindowBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Model.SinglePane.SelectedContent.CanClose, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="CloseButton" Property="Command" Value="{Binding CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="CloseButton" Property="ToolTip" Value="{x:Static avalonDockProperties:Resources.Document_Close}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avalonDockControls:LayoutAutoHideWindowControl}" TargetType="{x:Type avalonDockControls:LayoutAutoHideWindowControl}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    </Style>

    <Style x:Key="{x:Type avalonDockControls:NavigatorWindow}" TargetType="{x:Type avalonDockControls:NavigatorWindow}">
        <Setter Property="Background" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level0a}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SolidColorBrush.PrimaryPalette.Level1}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome
					CaptionHeight="16"
					CornerRadius="0"
					GlassFrameThickness="4"
					ResizeBorderThickness="10"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:NavigatorWindow}">
                    <Grid>
                        <Border
							x:Name="WindowBorder"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0">
                            <Grid Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition MinHeight="54"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition MinHeight="42"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Image
                                            Source="{Binding SelectedDocument.LayoutElement.IconSource, Converter={avalonDockConverters:NullToDoNothingConverter}}"
                                            Stretch="None"/>
                                        <TextBlock
											x:Name="selectedElementTitle"
											Grid.Column="1"
											Margin="4,0,0,0"
											VerticalAlignment="Center"
											FontWeight="Bold"
                                            Foreground="{DynamicResource Element.Foreground.Base}"
											Text="{Binding SelectedDocument.LayoutElement.Title}"
											TextTrimming="CharacterEllipsis"/>
                                    </Grid>
                                    <TextBlock
										x:Name="selectedElementDescription"
										VerticalAlignment="Center"
                                        Foreground="{DynamicResource Element.Foreground.Base}"
										Text="{Binding SelectedDocument.LayoutElement.Description}"
										TextTrimming="CharacterEllipsis"/>
                                </Grid>
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Margin="5">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock
											Margin="0,3,0,4"
											FontWeight="Bold"
                                            Foreground="{DynamicResource Element.Foreground.Base}"
											Text="{x:Static avalonDockProperties:Resources.Active_ToolWindows}"/>
                                        <ListBox
											x:Name="PART_AnchorableListBox"
											AutomationProperties.Name="{x:Static avalonDockProperties:Resources.Active_ToolWindows}"
											Grid.Row="1"
											MaxHeight="400"
											Background="Transparent"
											BorderThickness="0"
											FocusVisualStyle="{x:Null}"
											ItemsSource="{Binding Anchorables}"
											SelectedItem="{Binding SelectedAnchorable, Mode=TwoWay}">
                                            <ListBox.ItemContainerStyle>
                                                <Style TargetType="ListBoxItem">
                                                    <Setter Property="Cursor" Value="Hand"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource Element.Foreground.Base}"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                            <Setter Property="TextElement.Foreground" Value="{DynamicResource Element.Foreground.Accent}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                        <Image
                                                            Source="{Binding LayoutElement.IconSource, Converter={avalonDockConverters:NullToDoNothingConverter}}"
                                                            Stretch="None"/>
                                                        <TextBlock
															Grid.Column="1"
															Margin="4,2,0,2"
															Text="{Binding LayoutElement.Title}"
															TextTrimming="CharacterEllipsis"/>
                                                    </Grid>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                    </Grid>
                                    <Grid Grid.Column="1" Margin="5">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <TextBlock
											Margin="0,3,0,4"
                                            Foreground="{DynamicResource Element.Foreground.Base}"
											FontWeight="Bold"
											Text="{x:Static avalonDockProperties:Resources.Active_Files}"/>
                                        <ListBox
											x:Name="PART_DocumentListBox"
											AutomationProperties.Name="{x:Static avalonDockProperties:Resources.Active_Files}"
											Grid.Row="1"
											MaxHeight="400"
											Background="Transparent"
											BorderThickness="0"
											FocusVisualStyle="{x:Null}"
											ItemsSource="{Binding Documents}"
											SelectedItem="{Binding SelectedDocument, Mode=TwoWay}">
                                            <ListBox.ItemContainerStyle>
                                                <Style TargetType="ListBoxItem">
                                                    <Setter Property="Cursor" Value="Hand"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource Element.Foreground.Base}"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                            <Setter Property="TextElement.Foreground" Value="{DynamicResource Element.Foreground.Accent}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                        <Image
                                                            Source="{Binding LayoutElement.IconSource, Converter={avalonDockConverters:NullToDoNothingConverter}}"
                                                            Stretch="None"/>
                                                        <TextBlock
															Grid.Column="1"
															Margin="4,2,0,2"
															Text="{Binding LayoutElement.Title}"
															TextTrimming="CharacterEllipsis"/>
                                                    </Grid>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                            <ListBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel Orientation="Vertical"/>
                                                </ItemsPanelTemplate>
                                            </ListBox.ItemsPanel>
                                        </ListBox>
                                    </Grid>
                                </Grid>
                                <Grid Grid.Row="2">
                                    <TextBlock VerticalAlignment="Center" Text="{Binding SelectedDocument.LayoutElement.ToolTip}"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SelectedDocument" Value="{x:Null}">
                            <Setter TargetName="selectedElementTitle" Property="Text" Value="{Binding SelectedAnchorable.LayoutElement.Title}"/>
                            <Setter TargetName="selectedElementDescription" Property="Text" Value="{x:Null}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>